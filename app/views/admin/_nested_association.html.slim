- no_actions ||= false
- sortable ||= false
- order = sortable ? (f.object.send(association).respond_to?(:order_fields) ? f.object.send(association).order_fields : :priority) : nil
- collection ||= f.object.send(association)
- partial ||= "#{association.to_s.singularize}_fields"
- label ||= f.object.class.human_attribute_name association
- klass ||= f.object.send(association).klass
- name ||= accusative(klass).mb_chars.downcase
- add_button_text ||= t('form.add', name: name)
- paste_text ||= t('form.paste', name: name)
- if label.present?
  .ui.horizontal.divider
    = label
- klasses = { 'nested-sortable' => sortable, 'nested-container' => true }.select { |k, v| v }.keys.join(' ')
div id=association class=klasses
  - args = [association]
  - if order
    - if f.object.persisted? && f.object.valid?
      - args << f.object.send(association).order(order)
    - else
      - args << f.object.send(association).sort_by(&order)
  = f.simple_fields_for *args do |nested_f|
    = render partial, f: nested_f, parent_f: f
  - unless no_actions
    .links
      = link_to_add_association f, association, class: 'ui tiny basic button nested-add-link', partial: partial, render_options: {locals: {default_template: true, parent_f: f}} do
        i.icon.plus
        '
        = add_button_text
      = yield if block_given?
br
- if sortable
  javascript:
    initNestedSortable()